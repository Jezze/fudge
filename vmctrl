#!/bin/bash

cmd_run() {
    sttybak=$(stty -g)
    devices="-vga std -serial stdio"
    devices="$devices -device rtl8139,netdev=eth0,bus=pci.0,addr=0x4 -netdev tap,id=eth0,ifname=node-$1-eth0,script=no,downscript=no"

    if test -f "disks/node-$1-sda.qcow2"
    then
        devices="$devices -drive file=disks/node-$1-sda.qcow2,format=qcow2,if=ide,index=0"
    fi

    echo "Use ctrl+] to kill node-$1"

    stty intr ^]
    qemu-system-x86_64 -nodefaults -enable-kvm -smp 4 -kernel fudge -initrd fudge.cpio $devices
    stty $sttybak
}

cmd_nat() {
    sysctl -w net.ipv4.conf.all.forwarding=1
    iptables -t nat -A POSTROUTING -o $1 -j MASQUERADE
}

cmd_connect() {
    networks="eth0"

    for net in $networks
    do
        bridge="bridge-$net"
        address="10.0.5.80/24"

        if ! test -e /sys/class/net/$bridge
        then
            ip link add $bridge type bridge
            ip link set $bridge up
            ip addr add $address dev $bridge
        fi

        for interface in $(ls -1 /sys/class/net | grep node-.*-$net)
        do
            ip link set $interface master $bridge
            ip link set $interface up
        done
    done
}

cmd_disconnect() {
    networks="eth0"

    for net in $networks
    do
        bridge="bridge-$net"
        address="10.0.5.80/24"

        for interface in $(ls -1 /sys/class/net | grep node-.*-$net)
        do
            ip link set $interface down
            ip link set $interface nomaster
        done

        if test -e /sys/class/net/$bridge
        then
            ip addr del $address dev $bridge
            ip link set $bridge down
            ip link del $bridge type bridge
        fi
    done
}

cmd_mkdisk() {
    mkdir -p disks
    echo -n "Creating sda disk... "
    qemu-img create -q -f qcow2 disks/node-$1-sda.qcow2 5G
    echo "done"
}

cmd_help() {
    echo "Commands:"
    echo "    run <id>"
    echo "    nat <iface>"
    echo "    connect"
    echo "    disconnect"
    echo "    mkdisk <id>"
}

case "$1" in
run)
    cmd_run $2
    ;;
nat)
    cmd_nat $2
    ;;
connect)
    cmd_connect
    ;;
disconnect)
    cmd_disconnect
    ;;
mkdisk)
    cmd_mkdisk $2
    ;;
*)
    cmd_help
    ;;
esac
